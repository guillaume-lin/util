# ticket on domain visit

defmodule VistorManagement.Visit.Ticket do
  # This turns this module into a resource
  use Ash.Resource, domain: VistorManagement.Visit, data_layer: AshPostgres.DataLayer

  postgres do
    table "tickets"
    repo VistorManagement.Repo
  end

  actions do
    # Use the default implementation of the :read action
    defaults [:read]

    # and a create action, which we'll customize later
    create :create do
      accept [:status, :name, :phone]
    end

    update :approve do
      accept [:status]
      change set_attribute(:status, :approved)
    end
  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    # Add a string type attribute called `:phone`
    attribute :phone, :string do
      allow_nil? false
      public? true
    end

    attribute :name, :string do
      allow_nil? false
      public? true
    end

    attribute :residentId, :string
    attribute :follower, :integer

    attribute :status, :atom do
      constraints one_of: [:applied, :approved, :closed]
      default :applied
      allow_nil? false
    end
  end
end
